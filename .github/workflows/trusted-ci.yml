name: 'Gemini CLI Trusted CI'

on:
  workflow_run:
    workflows: ['Gemini CLI CI']
    types:
      - 'completed'
    branches:
      - 'main'
      - 'release'

jobs:
  test:
    environment: 'trusted-ci-env'
    name: 'Test'
    runs-on: '${{ matrix.os }}'
    if: |-
      ${{ github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.event == 'pull_request' }}
    permissions:
      contents: 'read'
      checks: 'write'
      pull-requests: 'write'
    strategy:
      fail-fast: false # So we can see all test failures
      matrix:
        os:
          - 'macos-latest'
          - 'ubuntu-latest'
          - 'windows-latest'
        node-version:
          - '20.x'
          - '22.x'
          - '24.x'
    steps:
      - name: 'Checkout base branch'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # ratchet:actions/checkout@v5
        with:
          ref: '${{ github.event.workflow_run.base_branch }}' # Checkout base branch

      - name: 'Download Build Artifacts'
        uses: 'actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0' # ratchet:actions/download-artifact@v5
        with:
          name: 'build-artifacts'
          path: '.' # Download to current directory

      - name: 'Set up Node.js ${{ matrix.node-version }}'
        uses: 'actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020' # ratchet:actions/setup-node@v4
        with:
          node-version: '${{ matrix.node-version }}'
          cache: 'npm'

      - name: 'Fail if no access to secrets'
        if: '${{ secrets.GEMINI_API_KEY == '' }}' # Only run if secret is NOT available
        run: |
          echo "Error: Integration tests cannot be skipped due to missing GEMINI_API_KEY secret."
          echo "This workflow requires GEMINI_API_KEY for integration tests."
          exit 1 # This will cause the step and thus the job to fail

      - name: 'Run integration tests'
        if: '${{ secrets.GEMINI_API_KEY == '' }}' # Only run if secret is available
        env:
          NO_COLOR: true
          GEMINI_API_KEY: '${{ secrets.GEMINI_API_KEY }}' # Access secret here
        run: 'npm run test:integration:all'

      - name: 'Publish Test Report'
        if: |-
          ${{ always() }}
        uses: 'dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3' # ratchet:dorny/test-reporter@v2
        with:
          name: 'Test Results (Node ${{ matrix.node-version }})'
          path: 'packages/*/junit.xml'
          reporter: 'java-junit'
          fail-on-error: 'false'

      - name: 'Upload coverage reports'
        if: |-
          ${{ always() }}
        uses: 'actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02' # ratchet:actions/upload-artifact@v4
        with:
          name: 'coverage-reports-${{ matrix.node-version }}-${{ matrix.os }}'
          path: 'packages/*/coverage'

  post_coverage_comment:
    name: 'Post Coverage Comment'
    runs-on: 'ubuntu-latest'
    needs: 'test'
    if: |-
      ${{ always() && github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.event == 'pull_request' }}
    continue-on-error: true
    permissions:
      contents: 'read' # For checkout
      pull-requests: 'write' # For commenting
    strategy:
      matrix:
        # Reduce noise by only posting the comment once
        os:
          - 'ubuntu-latest'
        node-version:
          - '22.x'
    steps:
      - name: 'Checkout base branch'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # ratchet:actions/checkout@v5
        with:
          ref: '${{ github.event.workflow_run.base_branch }}' # Checkout base branch

      - name: 'Download coverage reports artifact'
        uses: 'actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0' # ratchet:actions/download-artifact@v5
        with:
          name: 'coverage-reports-${{ matrix.node-version }}-${{ matrix.os }}'
          path: 'coverage_artifact' # Download to a specific directory

      - name: 'Post Coverage Comment using Composite Action'
        uses: './.github/actions/post-coverage-comment' # Path to the composite action directory
        with:
          cli_json_file: 'coverage_artifact/cli/coverage/coverage-summary.json'
          core_json_file: 'coverage_artifact/core/coverage/coverage-summary.json'
          cli_full_text_summary_file: 'coverage_artifact/cli/coverage/full-text-summary.txt'
          core_full_text_summary_file: 'coverage_artifact/core/coverage/full-text-summary.txt'
          node_version: '${{ matrix.node-version }}'
          os: '${{ matrix.os }}'
          github_token: '${{ secrets.GITHUB_TOKEN }}'
